{"version":3,"sources":["Components/Add.js","Redux/Actions.js","Components/Edit.js","Components/Home.js","Components/Navbar.js","App.js","Redux/Reducer.js","Redux/Store.js","index.js"],"names":["Add","useState","name","setName","email","setEmail","number","setPhone","history","useHistory","dispatch","useDispatch","contacts","useSelector","state","rootReducer","console","log","className","type","placeholder","value","onChange","e","target","to","onClick","preventDefault","flag","flag1","Emailflag","numberflag","toast","warning","checkmail","find","contact","checknumber","error","validator","isEmail","length","data","id","payload","addAction","success","push","Edit","useParams","cid","parseInt","useEffect","onSubmit","addUpdate","Home","border","map","user","i","deleteAction","Navbar","App","path","exact","initialState","Add_Reducer","action","updatestate","cons","filter","persistConfig","key","storage","Allreducers","combineReducers","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1e2ac10.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addAction } from \"../Redux/Actions\";\r\nimport { toast } from \"react-toastify\";\r\nimport validator from \"validator\";\r\n\r\nconst Add = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [number, setPhone] = useState(\"\");\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector((state) => state.rootReducer);\r\n  console.log(contacts);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let flag = true;\r\n    let flag1= true;\r\n    let Emailflag = true;\r\n    let numberflag = true;\r\n    if (!email && !number && !name) {\r\n       toast.warning(\"Please fill all the fields 🤔\");\r\n    } else {\r\n      if (!email || !number || !name) {\r\n        return toast.warning(\"All fields are mandatory 🤔\");\r\n      }\r\n      const checkmail = contacts.find((contact) => contact.email === email);\r\n\r\n      const checknumber = contacts.find((contact) => contact.number === number);\r\n   \r\n      if (checkmail) {\r\n        flag = !flag;\r\n        return toast.error(\"Your email \" + checkmail.email + \" is already exist 🤦‍♂️\");\r\n        \r\n      } \r\n      if (checknumber) {\r\n        flag1 = !flag1;\r\n        return toast.error(\"This number \" + checknumber.number + \" already exist 🤦‍♂️\");\r\n        \r\n      }\r\n        \r\n      let valid = validator.isEmail(email);\r\n      if(valid === false)\r\n      {\r\n        Emailflag = !Emailflag;\r\n        toast.warning(\"Please enter a valid email 😢\")\r\n      }\r\n      const numberlen = number.length;\r\n      if(numberlen !== 10)\r\n      {\r\n       numberflag = !numberflag;\r\n        toast.warning(\"Please enter valid 10 digit number 😢\");\r\n      }\r\n\r\n// console.log(contacts[contacts.length + 1].id);\r\n      \r\n      const data = {\r\n        id: contacts.length+1,\r\n        name,\r\n        email,\r\n        number,\r\n      };\r\n      if (name && email && number && flag  && flag1 && Emailflag && numberflag) {\r\n        dispatch(addAction(data));\r\n        toast.success(\"Contact added successfully 😎\");\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"addcomp\">\r\n      <div className=\"hometext\">\r\n        <h2>Add Contacts</h2>\r\n      </div>\r\n      <form className = \"form\">\r\n        <div className=\"form-grp\">\r\n          <input\r\n          className = \"input-field\"\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"form-grp\">\r\n          <input\r\n          className = \"input-field\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"form-grp\">\r\n          <input\r\n          className = \"input-field\"\r\n            type=\"number\"\r\n            placeholder=\"Phone Number\"\r\n            value={number}\r\n            onChange={(e) => {\r\n              setPhone(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"btn-1\">\r\n          <Link to=\"/\">\r\n            <button className = \"button\" onClick={handleSubmit}>Add Contact</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"btn-2\">\r\n                <Link to=\"/\">\r\n                    <button className = \"button\">Cancel</button>\r\n                </Link>\r\n              </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n"," export const addAction= (data)=>{\r\n    return{\r\n        type : \"ADD_CONTACT\",\r\n        payload : data,\r\n    };\r\n}\r\n\r\n export  const addUpdate = (data)=>{\r\n    return{\r\n        type : \"UPDATE_CONTACT\",\r\n        payload : data\r\n    }\r\n}\r\n\r\n export  const deleteAction= (id)=>{\r\n  \r\n    return{\r\n    type  : \"DELETE_CONTACT\",\r\n    payload : id\r\n    }\r\n }\r\n\r\n ","import React ,{useEffect,useState}from 'react'\r\nimport { useSelector ,useDispatch} from 'react-redux';\r\nimport { Link ,useParams,useHistory  } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\nimport {addUpdate} from '../Redux/Actions';\r\nimport validator from 'validator';\r\n\r\nconst Edit = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [number, setPhone] = useState(\"\");\r\nconst {id} = useParams();\r\nconst history = useHistory();\r\nconst dispatch = useDispatch();\r\nconst contacts =  useSelector(state=>state.rootReducer);\r\n\r\nconst cid = contacts.find(contact => contact.id === parseInt(id));\r\n \r\n\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n  if(cid){\r\n    setName(cid.name);\r\n    setEmail(cid.email);\r\n    setPhone(cid.number);\r\n  }\r\n\r\n},[cid]);\r\n\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault();\r\n  \r\n\r\n  let flag = true;\r\n  let flag1= true;\r\n  let Emailflag = true;\r\n  let numberflag=true;\r\n  if (!email && !number && !name) {\r\n    toast.warning(\"Please fill in all fields 🤔\" );\r\n  } else {\r\n    if (!email || !number || !name) {\r\n      toast.warning(\"Every field are mandatory 🤔\");\r\n    }\r\n    const checkmail = contacts.find(\r\n      (contact) => contact.id !== parseInt(id) && contact.email === email\r\n    );\r\n\r\n    const checknumber =  contacts.find(\r\n      (contact) => contact.id !== parseInt(id) && contact.number === number);\r\n       \r\n    if (checkmail) {\r\n      flag = !flag;\r\n    toast.error(\"Your email \" + checkmail.email + \" is already exist ❌\");\r\n     \r\n    } \r\n    if (checknumber) {\r\n      flag1 = !flag1;\r\n      toast.error(\"This number \" + checknumber.number + \" already exist ❌\");\r\n      \r\n    }\r\n    let valid = validator.isEmail(email);\r\n      if(valid === false)\r\n      {\r\n        Emailflag = !Emailflag;\r\n        toast.warning(\"Please enter a valid email 😢\")\r\n      }\r\n      const numberlen = number.length;\r\n      if(numberlen !== 10)\r\n      {\r\n       numberflag = !numberflag;\r\n        toast.warning(\"Please enter valid 10 digit number 😢\");\r\n      }\r\n  const data = {\r\n    id : parseInt(id),\r\n    name,\r\n    email,\r\n    number,\r\n  };\r\n  if (name && email && number && flag  && flag1 && Emailflag && numberflag) {\r\n     dispatch(addUpdate(data));\r\n     toast.success(\"Contact Updated Successfully ✔\")\r\n     history.push(\"/\");\r\n\r\n  }\r\n}\r\n};\r\n\r\n    return (\r\n \r\n         <div className = 'addcomp'>\r\n           {cid ? (\r\n              <div>\r\n              <div className=\"hometext\">\r\n                <h2>Edit Contacts {id}</h2>\r\n              </div>\r\n              <form onSubmit = {handleSubmit} className=\"form\">\r\n                <div className=\"form-grp\">\r\n                  <input \r\n                  className = \"input-field\"\r\n                        type=\"text\" \r\n                        placeholder=\"Name\" \r\n                        value={name}\r\n                        onChange={(e) => {\r\n                            setName(e.target.value)}} />\r\n                  \r\n                </div>\r\n                <div className=\"form-grp\">\r\n                  <input \r\n                  className = \"input-field\"\r\n                         type=\"text\" \r\n                         placeholder=\"Email\"\r\n                         value={email}\r\n                        onChange={(e) => {\r\n                            setEmail(e.target.value)}}  \r\n                         />\r\n                </div>\r\n                <div className=\"form-grp\">\r\n                  <input \r\n                  className = \"input-field\"\r\n                       type=\"number\" \r\n                       placeholder=\"Phone Number\" \r\n                  \r\n                        value={number}\r\n                        onChange={(e) => {\r\n                       setPhone(e.target.value)}} \r\n                    \r\n                  />\r\n                </div>\r\n                <div className=\"btn-1\">\r\n                   \r\n                    <input \r\n                       type=\"submit\"  className = \"button\" value=\"Update\"></input>\r\n                       \r\n                </div>\r\n                <div className=\"btn-2\">\r\n                <Link to=\"/\">\r\n                    <button className = \"button\">Cancel</button>\r\n                </Link>\r\n              </div>\r\n              </form>\r\n              </div>\r\n           ) : (<h1>This id {id} dont exist</h1>)}\r\n          \r\n        </div>\r\n    )\r\n                        }\r\nexport default Edit\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteAction } from \"../Redux/Actions\";\r\n\r\nconst Home = () => {\r\n  const data = useSelector((state) => state.rootReducer);\r\n\r\n  const length = data.length;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteContact = (id) => {\r\n    dispatch(deleteAction(id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"hometext\">\r\n        <h2>Welcome to React Redux Contact Book</h2>\r\n      </div>\r\n\r\n      {length ? (\r\n        <table className=\"table\" border=\"1rem\">\r\n          <thead>\r\n            <tr>\r\n              {/* <th>Id</th> */}\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Contact number</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((user, i) => (\r\n              <tr key={user.id}>\r\n                {/* <td>{user.id}</td> */}\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.number}</td>\r\n                <td>\r\n                  <Link to={`/edit/${user.id}`}>\r\n                    <button className=\"button\">Edit</button>\r\n                  </Link>\r\n                  <button\r\n                    className=\"button\"\r\n                    type=\"button\"\r\n                    onClick={() => deleteContact(user.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div>\r\n        <Link to=\"/add\">\r\n          <button className=\"button\">Add New Contact</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n        <nav className='Navbar'>\r\n          <Link to='/'>\r\n              <h2>React Redux Contact list App </h2>\r\n           </Link>\r\n              \r\n        </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Add from \"./Components/Add\";\r\nimport Edit from \"./Components/Edit\";\r\nimport Home from \"./Components/Home\";\r\nimport Navbar from \"./Components/Navbar\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <ToastContainer />\r\n      <Router>\r\n          <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" exact><Home /></Route>\r\n\r\n          <Route path=\"/add\" exact><Add /></Route>\r\n\r\n          <Route path=\"/edit/:id\" exact ><Edit /></Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const initialState = [];\r\n\r\n const Add_Reducer =(state = initialState,action )=>{\r\n    switch (action.type) {\r\n        case \"ADD_CONTACT\" :\r\n            state = [...state, action.payload] ;\r\n        return state;\r\n           \r\n        case \"UPDATE_CONTACT\":\r\n         const updatestate = state.map(contact => contact.id === action.payload.id  ? action.payload : contact);\r\n         state = updatestate;\r\n         return state;\r\n          \r\n\r\n         case \"DELETE_CONTACT\":\r\n             \r\n             const cons = state.filter(contact => contact.id !== action.payload && contact);\r\n             state = cons;\r\n              return state;\r\n             default:\r\n            return state;\r\n            \r\n    }\r\n\r\n}\r\n\r\nexport  default Add_Reducer;","import { createStore ,combineReducers} from \"redux\";\r\nimport {persistReducer,persistStore} from 'redux-persist';\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from './Reducer';\r\n\r\nconst persistConfig = {\r\n    key : 'root',\r\n    storage\r\n}\r\n\r\nconst Allreducers = combineReducers({\r\n    rootReducer,\r\n  });\r\n\r\nconst persistedReducer = persistReducer(persistConfig,Allreducers)\r\nconst store = createStore(\r\n    persistedReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n  \r\n\r\n export  const persistor = persistStore(store);\r\n\r\nexport default  store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport store from './Redux/Store';\r\nimport { Provider } from \"react-redux\";\r\nimport {persistor} from \"./Redux/Store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate persistor={persistor}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </PersistGate>\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}